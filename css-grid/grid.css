/*let's meet the css grid system */

/*
1Â°) select the container class and set the display property to grid
2Â°) create a grid with 3 columns
3Â°) after a call with Bruno, we finally want 4 columns
*/


/*This is the second part of the exercise.*/

/*
1Â°) select the container class and set the display property to grid
2Â°) create a grid with 3 columns by using the grid-templates-areas property
3Â°) set a gap between the items of 10px
*/



/*select the item class and set :
 display flexbox and center the box axis
 set the background color by using the yellow variable
 set the border radius by using the border-radius variable
 set the font size to 35px;
 set the border to solid with 5 pixels and the color to rgba(0,0,0,0.05)
 */





/*we want the following grid areas:
the "header" class should be the header and take the entire first row*/


/*the "sidebar1" class should represent the sidebar-1 content area*/


/*the "main" class should represent the content area*/


/*the "sidebar2" class should represent the sidebar-2 area*/


/*the "footer" class should represent the footer area
*/





/*
1Â°) make the display responsive with a max width screen under 700px:
    - display everything within a single column
    - the header should be the first row
    - the content should be the second row
    - the sidebar1 should be the third row
    - the footer should be the fourth row
*/


/*remove the "sidebar1" classes*/


/*this is really awesome ðŸ˜ƒ keep on playing with the grid-template-areas property*/
/*Imagine Bruno wants the header to start at the second column and the first sidebar to expand until the last row ? */



